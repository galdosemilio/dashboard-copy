version: 2.1

orbs:
  aws-s3: circleci/aws-s3@2.0.0

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: cypress/browsers:node14.17.0-chrome88-ff89
      environment:
        TZ: 'America/New_York'
  resource_class: large

yarn_auth: &yarn_auth
  name: Set up .npmrc (auth)
  command: |
    echo "registry=https://$NPM_REGISTRY" > ~/.npmrc
    echo "//$NPM_REGISTRY:_authToken=\"$NPM_AUTH_TOKEN\"" >> ~/.npmrc
    echo "//$NPM_REGISTRY:always-auth=true" >> ~/.npmrc
    echo "//npm.pkg.github.com/:_authToken=\"$COACHCARE_AUTH_TOKEN\"" >> ~/.npmrc
    echo "@coachcare:registry=https://npm.pkg.github.com/" >> ~/.npmrc

npm_dependency_installation: &npm_dependency_installation
  name: Installing NPM dependencies
  command: |
    attempts=0
    until [ $attempts -ge 5 ]
    do
        yarn install --frozen-lockfile && break
        attempts=$[$attempts+1]
        echo "yarn install attempt $attempts failed, retrying"
    done
    if [ $attempts -ge 5 ]; then
        exit 5
    fi
dependency_cache_key: &dependency_cache_key dependency-cache-{{ checksum "yarn.lock" }}
jobs:
  setup:
    <<: *defaults
    steps:
      - checkout
      - run: *yarn_auth
      - restore_cache:
          key: *dependency_cache_key
      - run: *npm_dependency_installation
      - save_cache:
          key: *dependency_cache_key
          paths:
            - ./node_modules
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .

  execute_affected:
    <<: *defaults
    parameters:
      command:
        type: enum
        enum:
          - lint
          - build
          - test
          - e2e
      base:
        type: string
        default: origin/master
      exclude:
        type: string
        default: ''
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Execute affected - << parameters.command >>
          command: yarn affected:<<parameters.command>> --base=<< parameters.base >> <<# parameters.exclude >> --exclude=<< parameters.exclude >> <</ parameters.exclude >>

  full_build:
    <<: *defaults
    parameters:
      mode:
        description: Bundle build mode
        type: enum
        enum:
          - test
          - prod
          - blueinfy
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Execute full build for ADMIN
          command: NODE_OPTIONS=--max_old_space_size=6144 yarn build admin -c << parameters.mode >>
      - run:
          name: Execute full build for PROVIDER
          command: NODE_OPTIONS=--max_old_space_size=6144 yarn build provider -c << parameters.mode >>
      - run:
          name: Execute full build for MEASUREMENT CHARTS
          command: yarn build measurement-charts -c << parameters.mode >> --base-href /measurement-charts/
      - run:
          name: Copy deployment files
          command: |
            mkdir ~/repo/dist/apps/<< parameters.mode>>
            cp -r ~/repo/dist/apps/admin ~/repo/dist/apps/<< parameters.mode >>/admin
            cp -r ~/repo/dist/apps/provider ~/repo/dist/apps/<< parameters.mode >>/provider
            cp -r ~/repo/dist/apps/measurement-charts ~/repo/dist/apps/<< parameters.mode >>/measurement-charts
            cp appspec.yml ~/repo/dist/apps/<< parameters.mode >>
            cp -r scripts ~/repo/dist/apps/<< parameters.mode >>
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .

  deploy_on_demand:
    docker:
      - image: cimg/python:3.8
    working_directory: ~/repo/dist/apps
    parameters:
      env:
        type: enum
        enum:
          - blueinfy
    environment:
      AWS_REGION: us-east-1
    steps:
      - attach_workspace:
          at: ~/repo
      - aws-s3/copy:
          arguments: --acl public-read --recursive
          from: ./<< parameters.env>>/admin
          to: s3://<< parameters.env >>.dashboard.coachcare.com/
      - aws-s3/sync:
          arguments: --acl public-read --delete
          from: ./<< parameters.env>>/admin
          to: s3://<< parameters.env >>.dashboard.coachcare.com/
      - aws-s3/copy:
          arguments: --acl public-read --recursive
          from: ./<< parameters.env>>/provider
          to: s3://<< parameters.env >>.dashboard.coachcare.com/provider
      - aws-s3/sync:
          arguments: --acl public-read --delete
          from: ./<< parameters.env>>/provider
          to: s3://<< parameters.env >>.dashboard.coachcare.com/provider
      - aws-s3/copy:
          arguments: --acl public-read --recursive
          from: ./<< parameters.env>>/measurement-charts
          to: s3://<< parameters.env >>.dashboard.coachcare.com/measurement-charts
      - aws-s3/sync:
          arguments: --acl public-read --delete
          from: ./<< parameters.env>>/measurement-charts
          to: s3://<< parameters.env >>.dashboard.coachcare.com/measurement-charts
      - run:
          name: Push SumoLogic deployment notification
          command: |
            echo "`date` | Site deployment completed for PROJECT: $CIRCLE_PROJECT_REPONAME BRANCH: $CIRCLE_BRANCH COMMIT: $CIRCLE_SHA1 ENV: << parameters.env >> DEPLOYER: $CIRCLE_USERNAME" > sumologic-deployment.log
            curl -s -X POST -T sumologic-deployment.log "$SUMOLOGIC_COLLECTOR_URL" || { echo 'SumoLogic deployment log upload failed'; exit 0; }

  deploy:
    docker:
      - image: cimg/python:3.8
    working_directory: ~/repo/dist/apps
    parameters:
      env:
        type: enum
        enum:
          - test
          - production
    environment:
      AWS_REGION: us-east-1
    steps:
      - attach_workspace:
          at: ~/repo
      - aws-s3/copy:
          arguments: --acl public-read --recursive
          from: ./<< parameters.env>>/admin
          to: s3://$DEPLOYMENT_BUCKET/
      - aws-s3/sync:
          arguments: --acl public-read --delete
          from: ./<< parameters.env>>/admin
          to: s3://$DEPLOYMENT_BUCKET/
      - aws-s3/copy:
          arguments: --acl public-read --recursive
          from: ./<< parameters.env>>/provider
          to: s3://$DEPLOYMENT_BUCKET/provider
      - aws-s3/sync:
          arguments: --acl public-read --delete
          from: ./<< parameters.env>>/provider
          to: s3://$DEPLOYMENT_BUCKET/provider
      - aws-s3/copy:
          arguments: --acl public-read --recursive
          from: ./<< parameters.env>>/measurement-charts
          to: s3://$DEPLOYMENT_BUCKET/measurement-charts
      - aws-s3/sync:
          arguments: --acl public-read --delete
          from: ./<< parameters.env>>/measurement-charts
          to: s3://$DEPLOYMENT_BUCKET/measurement-charts
      - run:
          name: Push SumoLogic deployment notification
          command: |
            echo "`date` | Site deployment completed for PROJECT: $CIRCLE_PROJECT_REPONAME BRANCH: $CIRCLE_BRANCH COMMIT: $CIRCLE_SHA1 ENV: << parameters.env >> DEPLOYER: $CIRCLE_USERNAME" > sumologic-deployment.log
            curl -s -X POST -T sumologic-deployment.log "$SUMOLOGIC_COLLECTOR_URL" || { echo 'SumoLogic deployment log upload failed'; exit 0; }

  format_check:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Check code formatting
          command: yarn format:check
      - checkout
      - run:
          name:
            Check commit formatting
            # This checks all pending commits on a feature branch, but only the 'last' commit on master
            # because the $CIRCLE_BRANCH and origin/master will be the same in this scenario.
            # That being said, we shouldn't be pushing multiple (or any at all, really) commits to release directly to master anyway, but we should go through a PR.
          command: |
            MERGE_BASE=$(git merge-base $CIRCLE_BRANCH origin/master)
            if [ $MERGE_BASE = $CIRCLE_SHA1 ]; then
              npx commitlint -f $(git rev-parse $CIRCLE_BRANCH^1)
            else
              npx commitlint -f $MERGE_BASE
            fi

  publish_release:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - checkout
      - run:
          name: Set up .npmrc
          command: |
            echo "//npm.pkg.github.com/:_authToken=$COACHCARE_AUTH_TOKEN" >> ~/.npmrc
            echo "@coachcare:registry=https://npm.pkg.github.com/" >> ~/.npmrc
            echo "//npm.pkg.github.com/:_authToken=$COACHCARE_AUTH_TOKEN" > ~/.npmrc
      - run:
          name: Set up environment variables
          command: |
            echo "export GH_TOKEN=$COACHCARE_AUTH_TOKEN" >> $BASH_ENV
      - run:
          name: Publish new release
          command: npx semantic-release

  provider_e2e_parallel:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Installing Cypress ad-hoc
          command: ./node_modules/.bin/cypress install
      - run:
          name: Sound card default config
          command: echo -e 'pcm.!default {\n type hw\n card 0\n}\n\nctl.!default {\n type hw\n card 0\n}' > ~/.asoundrc
      - run:
          name: Running affected e2e
          command: yarn run cy-serve:provider
    parallelism: 5

  admin_e2e_parallel:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Installing Cypress ad-hoc
          command: ./node_modules/.bin/cypress install
      - run:
          name: Sound card default config
          command: echo -e 'pcm.!default {\n type hw\n card 0\n}\n\nctl.!default {\n type hw\n card 0\n}' > ~/.asoundrc
      - run:
          name: Running affected e2e
          command: yarn run cy-serve:admin
    parallelism: 3

  commit_count_check:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Commit Count Check
          command: |
            commitCount=$(git rev-list --right-only --count origin/master...origin/${CIRCLE_BRANCH})
            if [ $commitCount -gt 1 ]
            then
              exit 1
            fi

workflows:
  setup_build_deploy:
    jobs:
      - setup
      - commit_count_check:
          requires:
            - setup
      - format_check:
          requires:
            - setup
      - execute_affected:
          name: affected_lint
          command: lint
          requires:
            - setup
      - execute_affected:
          name: affected_build
          command: build
          requires:
            - affected_lint
            - format_check
      - execute_affected:
          name: affected_test
          command: test
          exclude: api,datepicker,layout,common,backend,measurement-charts
          requires:
            - affected_build
      - approve_affected_e2e:
          type: approval
          filters:
            branches:
              ignore:
                - /dependabot.*/
                - master
          requires:
            - affected_build
      - execute_affected:
          name: affected_e2e
          command: e2e
          filters:
            branches:
              ignore:
                - /dependabot.*/
                - master
          requires:
            - approve_affected_e2e
      - approve_e2e_parallel:
          type: approval
          requires:
            - affected_build
          filters:
            branches:
              only:
                - master
      - admin_e2e_parallel:
          requires:
            - approve_e2e_parallel
      - provider_e2e_parallel:
          requires:
            - approve_e2e_parallel
      - full_build:
          mode: test
          name: full_test_build
          filters:
            branches:
              ignore:
                - /dependabot.*/
          requires:
            - affected_test
      - full_build:
          mode: blueinfy
          name: full_blueinfy_build
          filters:
            branches:
              ignore:
                - /dependabot.*/
          requires:
            - affected_test
      - approve_test_deployment:
          type: approval
          filters:
            branches:
              ignore:
                - master
          requires:
            - full_test_build
            - full_blueinfy_build
      - deploy:
          name: deploy_test
          env: test
          requires:
            - approve_test_deployment
          context: dashboard-deployment-test
      - deploy_on_demand:
          name: deploy_blueinfy
          env: blueinfy
          requires:
            - approve_test_deployment
          context: dashboard-deployment-on-demand
      - deploy_on_demand:
          name: deploy_blueinfy_master
          env: blueinfy
          filters:
            branches:
              only:
                - master
          requires:
            - full_blueinfy_build
          context: dashboard-deployment-on-demand
      - deploy:
          name: deploy_test_master
          env: test
          filters:
            branches:
              only:
                - master
          requires:
            - full_test_build
          context: dashboard-deployment-test
      - full_build:
          mode: prod
          name: full_production_build
          filters:
            branches:
              only:
                - master
          requires:
            - deploy_test_master
      - approve_production_deployment:
          filters:
            branches:
              only:
                - master
          type: approval
          requires:
            - full_production_build
      - deploy:
          name: deploy_production
          env: production
          filters:
            branches:
              only:
                - master
          requires:
            - approve_production_deployment
          context: dashboard-deployment-production
      - publish_release:
          requires:
            - deploy_production
